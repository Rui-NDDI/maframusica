:where(input, button, select, textarea):focus:not(input[type="range"]) {
	outline: 3px solid transparent;
	box-shadow: 0 0 0 2px var(--highlight);
}

input, button, textarea, select,
input[type="file"]::-webkit-file-upload-button,
input[type="file"]::file-selector-button {
	font: inherit;
	font-size: inherit;
	color: inherit;
	letter-spacing: inherit;
	padding-inline: .75rem;
	padding-block: .5rem;
	border-radius: .25rem;
	border: 1px solid var(--border);
}

input, select,
textarea {
	width: 100%;
	background-color: var(--bg-muted);
}

label:not(.x-flex) {
	display: block;
}

label.x-flex {
	--x-flex-gap: .5rem;
}

textarea {
	resize: vertical;
}

select {
	appearance: none;
}

button, button[type], input[type="button"], input[type="submit"], input[type="reset"],
input[type="file"]::-webkit-file-upload-button,
input[type="file"]::file-selector-button {
	user-select: none;
	-webkit-tap-highlight-color: transparent;
	-webkit-touch-callout: none;
	cursor: pointer;
	font-weight: 500;
	width: max-content;
	display: inline-flex;
	justify-content: center;
	align-items: center;
	text-align: center;
	gap: .5rem;
	padding-inline: 1rem;
	padding-block: .25rem;
	background-color: var(--bg);
	box-shadow: var(--shadow);
}

input[type="range"] {
	-webkit-appearance: none;
	appearance: none;
	outline: none;
}
input[type="range"]::-webkit-slider-runnable-track {
	-webkit-appearance: none;
	appearance: none;
}
input[type="range"]::-moz-range-track {
	-webkit-appearance: none;
	appearance: none;
}
input[type="range"]::-webkit-slider-thumb {
	-webkit-appearance: none;
	appearance: none;
}
input[type="range"]::-moz-range-thumb {
	-webkit-appearance: none;
	appearance: none;
}
input[type="range"] {
	display: block;
	padding: 0;
	background: 0 0;
	outline: none;
	block-size: 0;
}

fieldset {
    display: grid;
    gap: 1rem;
	padding: 1rem;
	border: 1px solid var(--border);
	border-radius: .25rem;
}

select {
	padding-inline-end: 2rem;
	background-color: var(--bg);
	box-shadow: var(--shadow);
	/* arrow icon */
	background-image: 
	  conic-gradient(
		from 45deg, 
		transparent 0% 25%, 
		transparent 0% 75%,
		currentColor 0%
	  );
	background-size: 12px 12px;
	background-position: right 1rem top calc(50% + 4px);
	background-repeat: no-repeat;

	&[multiple] {
		background-image: none;
	}
}

input[type="file"]::-webkit-file-upload-button,
input[type="file"]::file-selector-button {
	font-size: .875rem;
	margin-inline-start: -.25rem;
	padding-block: .125rem;
}

input:is([type="checkbox"],[type="radio"]) {
	-webkit-appearance: none;
	appearance: none;
	inline-size: 1.5rem;
	block-size: 1.5rem;
	display: inline-grid;
	place-content: center;
	padding: 0;
}

input:is([type="checkbox"],[type="radio"])::before {
	content: "";
	transform: scale(0);
	transition: 120ms transform ease-in-out;
}
	
input:is([type="checkbox"],[type="radio"]):checked::before {
	transform: scale(1);
}

input[type="checkbox"]::before {
	inline-size: 1rem;
	block-size: 1rem;
	transform-origin: center center;
	clip-path: polygon(0 10%, 10% 0, 50% 40%, 90% 0, 100% 10%, 60% 50%, 100% 90%, 90% 100%, 50% 60%, 10% 100%, 0 90%, 40% 50%);
	background-color: currentColor;
}

input[type="checkbox"]:checked::before {
	transform: scale(.6);
}

input[type="radio"] {
	border-radius: 50%;
}

input[type="radio"]::before {
	inline-size: .5rem;
	block-size: .5rem;
	box-shadow: inset 1em 1em currentColor;
	border-radius: 50%;
}

input[type="range"]::-webkit-slider-thumb {
	cursor: ew-resize;
	width: 2rem;
	height: 1rem;
	background: var(--bg);
	border: 1px solid var(--border);
	border-radius: .25rem;
	box-shadow: var(--focus-ring, var(--shadow));
}

input[type="range"]::-moz-range-thumb {
	cursor: ew-resize;
	inline-size: 2rem;
	block-size: 1rem;
	background: var(--bg);
	border: 1px solid var(--border);
	border-radius: .25rem;
	box-shadow: var(--focus-ring, var(--shadow));
}

input[type="range"]:hover, 
input[type="range"]:focus-visible {
	--focus-ring: 0 0 0 2px var(--highlight);
}

input.toggle {
	--x-flex-gap: 0;
	inline-size: 3rem;
	padding: 0;
	border-radius: 1rem;
	transition: 120ms background-color ease-in-out;
}

input.toggle::before {
	content: "";
	display: block;
	clip-path: revert;
	inline-size: 1rem;
	block-size: 1rem;
	background-color: var(--bg);
	box-shadow: var(--shadow);
	border: 1px solid var(--border);
	border-radius: .5rem;
	transform: translateX(-.75rem);
	transition: 120ms transform ease-in-out;
}

input.toggle:checked {
	background-color: currentColor;
}
	
input.toggle:checked::before {
	transform: translateX(.75rem);
}